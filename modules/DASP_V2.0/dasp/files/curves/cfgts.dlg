/*************************************************************************/
/* DASP  : Distributive Analysis Stata Package  (version 2.0)            */
/*************************************************************************/
/* Conceived and programmed by Dr. Araar Abdelkrim  (2006-2010)          */
/* Universit Laval, Quebec, Canada                                      */
/* email : aabd@ecn.ulaval.ca                                            */
/* Phone : 1 418 656 7507                                                */
/*************************************************************************/
/* module  : cfgts.dlg                                                   */
/*************************************************************************/

VERSION 9.2


INCLUDE graph_header
INCLUDE header


DIALOG main, label("DASP| FGT Curve with Confidence Interval --> cfgts command") tabtitle("Main")


BEGIN
  
   
  GROUPBOX intvar 10     10    360  60,                      ///
           label("Variable of interest: ")
           
  VARNAME  vl_var 20     +25   340   .,                   ///
           label("Variable")
           
           
           
  TEXT     tx_var2      20    100    80      .,                 ///
           label("Size  variable:   ")  
  
  VARNAME  vn_hhs      110    @     250      .,                 ///
           option(hsize)      
 
  TEXT     tx_var4      20    +45    80      .,                 ///
           label("Group  variable:   ") 
  VARNAME  vn_hhg      110    @     250      .,                 ///
           option(hgroup)            

  TEXT     tx_var5      20    +25    80      .,                 ///
             label("Group  number:   ") 
    
    
  EDIT    en_hhgn      110    @     250      .,                 ///
           option(ngroup)    

  GROUPBOX percentile 390    10    360 80,                      ///
           label("Type of curve(s)")
           
  CHECKBOX chk_var1     400    +25    80      .,                 ///  
             label("Type:   ")                                   ///      
  onclickon(main.cb_type.enable)                                 ///
  onclickoff(main.cb_type.disable)           
  
  COMBOBOX  cb_type      500    @     240      .,                 ///
            dropdownlist                                          ///
            contents(cb_type)  values(cb_type_val) option(type)  
            
 
            
           
  GROUPBOX chk_per  390    140  360 100,                         ///
           label("Parameters: ")         ///
  
   TEXT txt_al     +10    +25    100      .,                 ///  
                  label("Parameter alpha:   ")                           
       
   EDIT  ed_al    +110    @     230      .,                 ///
              option(alpha)    default(0)    
           
   TEXT    tx_min   510    +25    80      .,                    ///
           label("Minimum:   ") 		                ///
    		
   TEXT    tx_max   660    @   80      .,                 ///
           label("Maximum:   ") 
           
   
   TEXT txt_pl     400     +15    100      .,                 ///  
                  label("Poverty line (z):   ")        
   
   EDIT    ed_min   510    @     80      .,                 ///
           default(0) option(min)	  	             ///
       		
   EDIT    ed_max   660    @      80      .,                 ///
           default(10000) option(max) 	
           
   DEFINE _x 20
   DEFINE _y 240
	        
  INCLUDE _bu_svyset
   
END




LIST cb_type
BEGIN
  Normalised
  Not normalised
  
END

LIST cb_type_val
BEGIN
  nor
  not
END





INCLUDE dasp_conf_opts

INCLUDE dasp_dif_line_opts

INCLUDE dasp_gr_res_opts


INCLUDE gr_twoway

HELP hlp1,   view("help cfgts")
RESET res1
PROGRAM command
BEGIN
	put "cfgts "
	require  main.vl_var
	varlist [main.vl_var]
	beginoptions
		       
			optionarg main.ed_al
			optionarg main.vn_hhs
			optionarg main.vn_hhg
			optionarg main.en_hhgn
			optionarg main.cb_type

		
			optionarg main.ed_min
			optionarg main.ed_max
			
			optionarg res.fnamec
			
			optionarg res.fnamegs
			optionarg res.fnamege
			if res.chk_op1 {
						
						put "lres("
						put res.chk_op1
						put ")"
		                       }
		                       
		        if !res.chk_op3 {
						
						put "dgra("
						put res.chk_op3
						put ")"
		                       } 
		                       
		        if !confop.sp_level.isdefault() {
					                 optionarg confop.sp_level
							 }
				                 
			if !confop.cb_ci.isdefault()    {
					                 optionarg confop.cb_ci
				                        } 
				                        
			put " " /program confop_opts
			put " " /program confop_opts2
			put " " /program line_opts_dilopts_output
			put " " /program gr_twoway_output
		        
			
	endoptions
	
	
	
END
