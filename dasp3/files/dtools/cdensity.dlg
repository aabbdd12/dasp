/* 
  cdensity.dlg
*/  


VERSION 15.0

INCLUDE _std_xlarge
DEFINE  _dlght 430
DEFINE  _dlgwd 890
INCLUDE header

DIALOG main, label("DASP 3.0 | Density curves --> cdensity command") tabtitle("Main")


BEGIN

   
 GROUPBOX intvar       10     10    430  290,                      ///
           label("Variable(s) of ineterst: ")
           
  TEXT     tx_var111     20    +35    150      .,                 ///
           label("Welafre variable(s):   ")  
  
  VARLIST  vl_var 150     @   280   .,                   ///
           label("Variables")
           
  TEXT     tx_var2      20    +35    150      .,                 ///
           label("Size  variable:   ")  
  VARNAME  vn_hhs      150    @     280      .,                 ///
           option(hsize)      
 
  TEXT     tx_var4      20    +35    150      .,                 ///
           label("Group  variable:   ") 
  VARNAME  vn_hhg      150    @     280      .,                 ///
           option(hgroup)            

		   
  TEXT     tx_edt4      20    +35    150      .,                 ///
           label("Population base:   ") 
 COMBOBOX  cb_hhg      150    @     280      .,                 ///
              dropdownlist                                          ///
              contents(cb_hhg)  values(cb_hhg_val) option(popb)   default(1)



 
  GROUPBOX percentile   450    10  430 100,                         ///
             label("Options:")
             
    CHECKBOX chk_var1     460    +25    160      .,                 ///  
               label("Curves:   ")                                   ///      
    onclickon(main.cb_reg.enable)                                 ///
    onclickoff(main.cb_reg.disable)       
        COMBOBOX  cb_reg      +160    @     240      .,                 ///
              dropdownlist                                          ///
              contents(cb_reg)  values(cb_reg_val) option(type)  


    CHECKBOX chk_var2     460    +35    160      .,                 ///  
               label("Boundary-bias correction:   ")                                   ///      
    onclickon(program main_bias)  onclickoff(program main_bias)                                  
        
		COMBOBOX  cb_bias      +160    @     110      .,                 ///
              dropdownlist                                          ///
              contents(cb_bias)  values(cb_bias_val) option(bcor)    ///
              default(renor)   onselchangelist(cond_change)    

        COMBOBOX  cb_order      750    @     110      .,                 ///
              dropdownlist                                          ///
              contents(cb_order)  values(cb_order_val) option(border)            
           
               
  GROUPBOX chk_per  450    +45  430 100,                         ///
           label("Parameters: ")         ///
  

  
           
 RADIO    rad_bu3      460    +25     160      .,/*
 */ first label("X value")  onclickon(script rb_3)
 

           
    EDIT  ed_val      +160    @     240      .,                  ///
                  option(xval)   default(10000)


   TEXT    tx_min   620    +25    80      .,                    ///
           label("Minimum:   ")                                 ///
                
   TEXT    tx_max   760    @       80      .,                 ///
           label("Maximum:   ") 
           

      RADIO    rad_bu4      460    +20     160      .,/*
 */ last label("Range:")    onclickon(script rb_4)                 
   
   EDIT    ed_min   +160    @     100      .,                 ///
           default(0) option(min)                            ///
                
   EDIT    ed_max   +140    @      100      .,                 ///
           default(10000) option(max)   
		   
		   
           
   CHECKBOX ck_width  450    +35  430 80,		///
		 label(`"Override "optimal" bandwidth"')               ///
		 groupbox						///
		 option("width")					///
		        onclickoff(main.en_width.disable)                      ///
                 onclickon(main.en_width.enable)                    ///
                 default(0)
  TEXT     tx_width  460   +25      160     .,			/*
		*/ label("Bandwidth of kernel:")			/*
		*/
  EDIT     en_width  +160    @       240   .,			/*
		*/ label("Bandwidth of kernel")				/*
		*/ numonly						/*
		*/ option("band") default(1.0)					/*
		*/           
   
END



SCRIPT PREINIT
BEGIN
	create BOOLEAN has_cond1
	create BOOLEAN has_cond2	
END

LIST cond_change
BEGIN
	script cond1
	script cond2	
END


SCRIPT cond1
BEGIN
	has_cond1.settrue
	has_cond2.setfalse
        program check_conds
END

SCRIPT cond2
BEGIN
	has_cond1.setfalse
	has_cond2.settrue
        program check_conds
END


PROGRAM check_conds
BEGIN
if (has_cond1){
call main.cb_order.show
}

if has_cond2{
call main.cb_order.hide
}
END




PROGRAM main_bias
BEGIN
if main.chk_var2  {
call main.cb_bias.enable
call main.cb_order.enable
}

if !main.chk_var2  {
call main.cb_bias.disable
call main.cb_order.disable
}

END



LIST cb_reg
BEGIN
  Density curves
  Derivatives of density curves
END

LIST cb_reg_val
BEGIN
  den
  dde
END

LIST cb_hhg
BEGIN
  Group population
  Whole population
END

LIST cb_hhg_val
BEGIN
  1
  2
END




LIST cb_bias
BEGIN
  Renormalization
  Reflection
END

LIST cb_bias_val
BEGIN
  renor
  reflec
END


LIST cb_order
BEGIN
  First order
  Second order
  Third order
END

LIST cb_order_val
BEGIN
  1
  2
  3
END



SCRIPT rb_3
BEGIN
main.ed_val.enable
main.ed_min.disable
main.ed_max.disable
END

SCRIPT rb_4
BEGIN
main.ed_val.disable
main.ed_min.enable
main.ed_max.enable
END

INCLUDE dasp_gr_res_opts

INCLUDE gr_yaxis
INCLUDE gr_xaxis
INCLUDE gr_titles
INCLUDE gr_legend
INCLUDE gr_overall

HELP hlp1,   view("help cdensity")
RESET res1
PROGRAM command
BEGIN
	put "cdensity "
	require  main.vl_var
	varlist [main.vl_var]
	beginoptions
		       
			optionarg main.vn_hhs
			optionarg main.vn_hhg
			optionarg main.cb_hhg
			optionarg main.cb_reg
			optionarg main.cb_bias
			optionarg main.ed_min
			optionarg main.ed_max
			optionarg main.ed_val
                  optionarg main.en_width
			optionarg main.cb_order
			optionarg res.fnamec
						
						optionarg res.fnamegs
						optionarg res.fnamege
						if res.chk_op1 {
									
									put "lres("
									put res.chk_op1
									put ")"
					                       }
					                       
					        if !res.chk_op3 {
									
									put "dgra("
									put res.chk_op3
									put ")"
					                       }               
			            put " " /program gr_yaxis_output
put " " /program gr_xaxis_output
put " " /program gr_titles_output
put " " /program gr_legend_output
put " " /program gr_overall_output
		        
			
	endoptions
	
END
