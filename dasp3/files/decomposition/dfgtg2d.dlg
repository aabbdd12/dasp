/*************************************************************************/
/* DASP  : Distributive Analysis Stata Package                           */
/*************************************************************************/
/* Conceived and programmed by Dr. Araar Abdelkrim  (2006-26)            */
/* Universite Laval, Quebec, Canada                                      */
/* email : aabd@ecn.ulaval.ca                                            */
/* Phone : 1 418 656 7507                                                */
/*************************************************************************/


VERSION 15
SYNCHRONOUS_ONLY


POSITION . . 890 420

  DEFINE col10  10
  DEFINE line10  10
   
  DEFINE col11  20
  DEFINE col20  450
  DEFINE vposds 340
  


DIALOG main, label("DASP 3.0 | Sectoral Decomposition of the FGT Indices --> dfgtg2d command") tabtitle("Main")


BEGIN

   GROUPBOX intvar       col10     line10    430  160,                      ///
           label("Distribution 1: ")
           
  COMBOBOX  fi_d1        col11   +25     120      .,                  ///
            contents(dt_src)  values(dt_src_val)  dropdownlist                         ///
            onselchange(program data_change1)  default(1)         
                     
           
  FILE  file_d1      150    @     280      .,                 ///
    label ("Browse...")    save option(file1)                      ///
    filter(Stata files (*.dta)|*.dta|All files (*.*)|*.*) onchange(program getLevels)
    

  
  TEXT     tx_var1      20    +25    150      .,                 ///
             label("Welfare variable:   ")  
  
  
   
  COMBOBOX  en_y_d1     150    @     280        .,      ///
        dropdown contents(levels) 
           
  
  VARNAME  vn_y_d1      150    @     280      .,                 ///
  option(wel1)

  
    


           
  TEXT     tx_var2      20    +25    150      .,                 ///
           label("Size  variable:   ")  
  
  COMBOBOX  en_hhs_d1   150    @     280        .,      ///
        dropdown contents(levels)  option(hsize1)  
           
 
  VARNAME  vn_hhs_d1      150    @     280      .,                 ////
           option(hsize1) 


           

 
 
 
 
 
 GROUPBOX intvar2 460     line10    430  160,                      ///
            label("Distribution 2: ")
            
   

               
               
  COMBOBOX  fi_d2        470   +25     120      .,              ///
            contents(dt_src)  values(dt_src_val) dropdownlist                ///
            onselchange(program data_change2)  default(1)              
                        
              
    FILE  file_d2      600    @     280      .,      onchange(program getLevels2)           ///
    label ("Browse...")    option(file2)                        ///
    filter(Stata files (*.dta)|*.dta|All files (*.*)|*.*)
    
   TEXT     tx_var3      470    +25    150      .,                 ///
              label("Welfare variable:   ")  
   
   
   COMBOBOX      en_y_d2      600    @     280      .,       ///                      
   dropdown contents(levels2)          
        
                
   VARNAME  vn_y_d2      600    @     280      .,      ///
  option(wel2)

   
            
   TEXT     tx_var4      470    +25    150      .,                 ///
            label("Size  variable:   ")  
                        
   COMBOBOX     en_hhs_d2      600    @     280      .,                 ///
            option(hsize2)      dropdown contents(levels2) 
        
                
   VARNAME  vn_hhs_d2      600    @     280      .,                 ///
            option(hsize2) 
            
             


     
            
           

            
            
                                  
          

           
  GROUPBOX chk_per  230    240  360 130,                         ///
           label("Parameters and options: ")         ///
  
  
     TEXT     tx_varg      +10    +25    110      .,                 ///
           label("Group  variable:   ") 
 
	 COMBOBOX  en_gr_d1     330    @     250        .,      ///
        dropdown contents(levels)  option(hgroup)
           
  
      VARNAME  vn_gr_d1     330     @     250      .,                 ///
      option(hgroup)
	   
		   
    TEXT txt_al     240    +25    250      .,                 ///  
                  label("Parameter alpha:   ")                           
       
     EDIT  ed_al    +90    @     250      .,                 ///
              option(alpha)    default(0) 

   TEXT txt_pl     240   +25    100      .,                 ///  
                  label("Poverty line:")                           
       
     EDIT  ed_pl    +90    @     250      .,                 ///
              option(pline)    default(10000)   
 
     TEXT       txt_op2     240    +25    80      .,                 ///  
             label("Reference period:   ")                             ///      
          
    COMBOBOX  cb_ref      +90    @     250      .,                  ///
            dropdownlist                                          ///
            contents(cb_ref)  values(cb_ref_val) option(ref)     ///
            default(1)   
                  

            
                                        
     
 
END


LIST cb_ref
BEGIN
  Initial
  Final
  No ref. period: Shapley approach
END

LIST cb_ref_val
BEGIN
  1
  2
  0
END




LIST li_num
BEGIN
  1
  2
END





INCLUDE prograB


PROGRAM getLevels
BEGIN
        if main.file_d1 & isLoading1 {
                put "GetLevels_DB " main.file_d1 " , mia(en_y_d1  en_hhs_d1 en_gr_d1) ndb(dfgtg2d)"
                stata hidden
        }
END

PROGRAM getLevels2
BEGIN
        if main.file_d2 & isLoading2 {
                put "GetLevels_DB " main.file_d2 " , mia(en_y_d2  en_hhs_d2) ndb(dfgtg2d)"
                stata hidden
        }
END






SCRIPT PREINIT
BEGIN
        create BOOLEAN has_cond11
        create BOOLEAN has_cond12
        create BOOLEAN has_cond13
    create BOOLEAN has_cond21
        create BOOLEAN has_cond22
        create BOOLEAN has_cond23
        create BOOLEAN has_cond1
        create BOOLEAN has_cond2
        create BOOLEAN has_cond3
        create BOOLEAN has_cond4        
                    create BOOLEAN isLoading1
             isLoading1.settrue
            create BOOLEAN isLoading2
             isLoading2.settrue
            program initialize
END



SCRIPT POSTINIT
BEGIN
        .isLoading1.settrue
        .isLoading2.settrue
        program getLevels
        program getLevels2
END



PROGRAM main_rb
BEGIN
if main.rb_a1  {
call main.ed_pl1.enable
call main.prop1.disable
call main.ofthe1.disable
call main.cb_pl1.disable
call main.ofpr1.disable
call main.perc1.disable
}

if !main.rb_a1  {
call main.ed_pl1.disable
call main.prop1.enable
call main.ofthe1.enable
call main.cb_pl1.enable
call main.ofpr1.enable
call main.perc1.enable
}

if main.rb_a2  {
call main.ed_pl2.enable

call main.prop2.disable
call main.ofthe2.disable
call main.cb_pl2.disable
call main.ofpr2.disable
call main.perc2.disable
}

if !main.rb_a2  {
call main.ed_pl2.disable
call main.prop2.enable
call main.ofthe2.enable
call main.cb_pl2.enable
call main.ofpr2.enable
call main.perc2.enable
}

END


DIALOG confop,  tabtitle("Confidence Interval")

BEGIN


TEXT     sp_txt  10      25      120      .,                            /*
                */ label("Confidence level in (%) : ")  
                
SPINNER  sp_level    140       25      50         .,                    /*
                */ label("Confidence level")                            /*
                */ min(10) default(95) max(99)                          /*
                */ option(level)
TEXT     ci_txt  10      +25      120     .,                            /*
                */ label("Confidence interval      : ") 
                
COMBOBOX cb_ci       140    @   200      .,                 ///
            contents(cb_ci) values(cb_ci_val)               ///
            dropdownlist default(ts)   option(conf)                     
END


LIST cb_ci
BEGIN
  Two-sideded
  Lower-bounded
  Upper-bounded
END


LIST cb_ci_val
BEGIN
  ts
  lb
  ub
END



DIALOG resop,  tabtitle("Results")

BEGIN
                                        
SPINNER  sp_dec    10       25      50    .,                    /*
                */ label("Decimals")                            /*
                */ min(0) default(6) max(12)                            /*
                */ option(dec)

TEXT     sp_txt  70      25      200      .,                            /*
                */ label("Number of decimals")  
                


END



HELP hlp1,   view("help dfgtg2d")
RESET res1
OK ok1,      label("OK")
CANCEL can1, label("Cancel")
SUBMIT sub1, label("Submit")
COPY copy1

PROGRAM command
BEGIN
        put "dfgtg2d "

if main.fi_d1.isdefault() {     
        require  main.vn_y_d1
        varlist  main.vn_y_d1
        }
if !main.fi_d1.isdefault() {
        require  main.en_y_d1
        varlist  main.en_y_d1
        }
        
if main.fi_d2.isdefault() {     
        require  main.vn_y_d2
        varlist  main.vn_y_d2
        }
if !main.fi_d2.isdefault() {
        require  main.en_y_d2
        varlist  main.en_y_d2
        }                               
beginoptions
                        
                       
                      
                        
                        optionarg main.file_d1
                        optionarg main.vn_hhs_d1
                        optionarg main.en_hhs_d1
                                                
                    
          
                        
                        optionarg main.file_d2
                        optionarg main.vn_hhs_d2
                        optionarg main.en_hhs_d2
                                                
                            

                        optionarg main.ed_al
                        optionarg main.ed_pl

                        optionarg main.en_gr_d1
						optionarg main.vn_gr_d1
                        
                        
                                  
                        if !main.cb_ref.isdefault() {
                                                        optionarg main.cb_ref
                                                     }
                        

                                      
                                       if !resop.sp_dec.isdefault() {
                                       optionarg resop.sp_dec
                                      }
                        
                                      if !confop.sp_level.isdefault() {
                                                         optionarg confop.sp_level
                                                         }
                                                 
                                      if !confop.cb_ci.isdefault()    {
                                                         optionarg confop.cb_ci
                                                        } 

                                                                                

endoptions      
        
END
