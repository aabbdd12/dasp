
/*************************************************************************/
/* DASP  : Distributive Analysis Stata Package  (version 2.3)            */
/*************************************************************************/
/* Conceived and programmed by Dr. Araar Abdelkrim  (2006-2012)          */
/* Universite Laval, Quebec, Canada                                      */
/* email : aabd@ecn.ulaval.ca                                            */
/* Phone : 1 418 656 7507                                                */
/*************************************************************************/
/* cpoverty.dlg                                                          */
/*************************************************************************/


VERSION 15.0

INCLUDE _std_xlarge
DEFINE  _dlght 430
DEFINE  _dlgwd 890
INCLUDE header




DIALOG main, label("DASP 3.0 |Poverty gap and cumulative poverty gap curves --> cpoverty command")  tabtitle("Main")


BEGIN
  
 GROUPBOX intvar       10     10    430  260,                      ///
           label("Variables of interest: ")
           
  
  TEXT     tx_var111     20    +25    150      .,                 ///
           label("Welfare variable(s):   ")  
  
  VARLIST  vl_var 150     @   280   .,                   ///
           label("Variables")
           
  TEXT     tx_var2      20    +25    150      .,                 ///
           label("Size  variable:   ")  
  VARNAME  vn_hhs      150    @     280      .,                 ///
           option(hsize)      
 
  TEXT     tx_var4      20    +25    150      .,                 ///
           label("Group  variable:   ") 
  VARNAME  vn_hhg      150    @     280      .,                 ///
           option(hgroup)            


		   
  
  GROUPBOX percentile   450    10  430 260,                         ///
           label("Type of curve(s)")
  
 

  CHECKBOX chk_var1     460    +25    120      .,                 ///  
             label("Curve(s):   ")                                   ///      
  onclickon(main.cb_type.enable)                                 ///
  onclickoff(main.cb_type.disable)           
  
  COMBOBOX  cb_type      +140    @     240      .,                 ///
            dropdownlist                                          ///
            contents(cb_type)  values(cb_type_val) option(curve)  
  
  
  CHECKBOX chk_nor     460    +25    120      .,                 ///  
             label("Type:  ")                                   ///      
  onclickon(main.cb_nor.enable)                                 ///
  onclickoff(main.cb_nor.disable) 
                           ///              
  COMBOBOX  cb_nor      +140    @     240      .,                  ///
            dropdownlist                                          ///
            contents(cb_nor)  values(cb_nor_val) option(type)     ///
            default(nor)
            
  CHECKBOX chk_var2     460    +25    120      .,                 ///  
             label("Difference: ")                             ///      
  onclickon(main.cb_dif.enable)                                  ///
  onclickoff(main.cb_dif.disable)           
  COMBOBOX  cb_dif      +140    @     240      .,                  ///
            dropdownlist                                          ///
            contents(cb_dif)  values(cb_dif_val) option(dif)     
            
           
  GROUPBOX chk_per  460    +45  410 100,                         ///
           label("Parameters: ")         ///
 
     TEXT     ed_pl1     460    +25   130 80,                 ///  
                      label("Poverty line:   ")                         
                   
     EDIT     ed_pline         +140    @     240     .,      ///
                    option(pline)  default(10000)   
           
   TEXT    tx_min   600    +25    80      .,                    ///
           label("Minimum:   ") 		                ///
    		
   TEXT    tx_max   750    @   80      .,                 ///
           label("Maximum:   ") 
           
   
   TEXT txt_pl     470     +20    150      .,                 ///  
                  label("Range of percentiles:   ")        
   
   EDIT    ed_min   600    @     90      .,                 ///
           default(0) option(min)	  	             ///
       		
   EDIT    ed_max   750    @      90      .,                 ///
           default(1) option(max) 	
   

   END



/*
LIST cb_type
BEGIN
  Normalised
  Not normalised
  
END

LIST cb_type_val
BEGIN
  nor
  not
END
*/
LIST cb_dif
BEGIN
  No
  With the first curve
END

LIST cb_dif_val
BEGIN
 no
 c1
END




DIALOG res,  tabtitle(" Graphical Results")
  BEGIN
    

 
    GROUPBOX gb1 10     10    360  80,                      ///
             label("Coordinates: ")
             
    CHECKBOX   chk_op1        20    +25    60    .,                   ///
             label("List:")      
             
    TEXT  txt2     20    +25    40      .,                 ///  
               label("Save:")                                 
    
    FILE  fnamec      80    @     280      .,                 ///
    label ("Browse...")    save option(sres)    
    
    
    
    GROUPBOX gb2     10     +40  360  120,                      ///
             label("Graph: ")
             
    CHECKBOX   chk_op3     20    +25    60    .,                   ///
             label("Display:") default(1)
             
             
    TEXT  txt4     20    +25    40      .,                 ///  
               label("Save:")                                  ///      
         
    
    FILE  fnamegs      80    @     280      .,                 ///
    label ("Browse...")    save option(sgra)                   ///
    filter("Stata Gragh (*.gph)|*.gph|All Files (*.*)|*.*")
    
    TEXT  chk_op5     20    +25    40      .,                 ///  
                   label("Export:")                                  ///      
            
        
        FILE  fnamege      80    @     280      .,                 ///
        label ("Browse...")    save option(egra)                   ///
        filter("MetaFile (*.wmf)|*.wmf|EPS (*.eps)|*.eps")
    
    
END






LIST cond_change
BEGIN
        script cond1
        script cond2
END


SCRIPT cond1
BEGIN
        has_cond1.settrue
        has_cond2.setfalse
        program check_conds
END

SCRIPT cond2
BEGIN
        has_cond1.setfalse
        has_cond2.settrue
        program check_conds
END




PROGRAM check_conds
BEGIN

if (has_cond1){
call main.sp_txt.hide
call main.sp_level.hide
call main.ci_txt.hide
call main.cb_ci.hide
call main.chk_var2.show
 call main.cb_dif.show

}

if (has_cond2){
call main.sp_txt.show
call main.sp_level.show
call main.ci_txt.show
call main.cb_ci.show
call main.chk_var2.hide 
 call main.cb_dif.hide
}
END






LIST cb_type
BEGIN
  Poverty gap
  Cumulative poverty gap
END

LIST cb_type_val
BEGIN
   pg
  cpg
END



LIST cb_nor
BEGIN
  Normalized
  Not normalized
END

LIST cb_nor_val
BEGIN
  nor
  not
END






INCLUDE gr_line_options
INCLUDE gr_yaxis
INCLUDE gr_xaxis
INCLUDE gr_titles
INCLUDE gr_legend
INCLUDE gr_overall

SCRIPT PREINIT
BEGIN
        create BOOLEAN has_cond1
        create BOOLEAN has_cond2  
        create BOOLEAN has_cond3
        create BOOLEAN has_cond4        
END

HELP hlp1,   view("help cpoverty")
RESET res1

PROGRAM command
BEGIN
	put "cpoverty "
	require  main.vl_var
	varlist [main.vl_var]
	beginoptions
		       
			
			optionarg main.vn_hhs
			optionarg main.vn_hhg
			optionarg main.cb_type
			optionarg main.cb_dif
		    optionarg main.ed_pline
			optionarg main.ed_min
			optionarg main.ed_max
			
		    optionarg res.fnamec
			optionarg res.fnamegs
			optionarg res.fnamege
        
			
			  if !main.cb_nor.isdefault() {
		        optionarg main.cb_nor
			}
			
	
                                                      
			if res.chk_op1 {
						
						put "lres("
						put res.chk_op1
						put ")"
		                       }
		                       
		        if !res.chk_op3 {
						
						put "dgra("
						put res.chk_op3
						put ")"
		                       } 
							   
							   
		       		    put " " /program gr_line_options_output
            put " " /program gr_yaxis_output
put " " /program gr_xaxis_output
put " " /program gr_titles_output
put " " /program gr_legend_output
put " " /program gr_overall_output
		        
			
	endoptions
	
	
	
END