/*************************************************************************/
/* DASP  : Distributive Analysis Stata Package  (version 2.2)            */
/*************************************************************************/
/* Conceived and programmed by Dr. Araar Abdelkrim  (2006-2012)          */
/* Universite Laval, Quebec, Canada                                      */
/* email : aabd@ecn.ulaval.ca                                            */
/* Phone : 1 418 656 7507                                                */
/*************************************************************************/ 
/* cdomc.dlg                                                              */
/*************************************************************************/ 

VERSION 9.2


INCLUDE graph_header
INCLUDE header


DIALOG main, label("DASP| Consumption Dominance Curves --> cdomc command") tabtitle("Main")


BEGIN
  
   
  GROUPBOX intvar 10     10    360  80,                      ///
           label("Variables of interest: ")
           
  TEXT   txt_com       20    +25     100      .,/*
 */   label("Component variables")  
 

           
    VARLIST  vl_clist      120    @     240      .,                  ///
                  option(clist)   
  
   TEXT   txt_inc       20    +25     100      .,/*
 */   label("Living standards") 
 
  VARNAME  vn_inc 120     @   240   .,                   ///
           label("Variables") option(inc)
           
           
           
  TEXT     tx_var2      20    +65    100      .,                 ///
           label("Size  variable:   ")  
  VARNAME  vn_hhs      120    @     240      .,                 ///
           option(hsize)                

    TEXT     tx_var4      20    +25    100      .,                 ///
           label("Group  variable:   ") 
  VARNAME  vn_hhg      120    @     240      .,                 ///
           option(hgroup)    

      

     
      
  GROUPBOX chk_per  390    10  360 280,                         ///
           label("Options and parameters: ")         ///
  
   
   
   TEXT txt_prc     +10    +25    150      .,                 ///  
                  label("Percentage of change in price:   ")                           
       
   EDIT  ed_prc    +150    @     190      .,                 ///
              option(prc)    default(1)    
   
   TEXT txt_al     400    +35    140      .,                 ///  
                  label("Order of dominance (s>=1) *:   ")                           
       
   EDIT  ed_ord    +150    @     190      .,                 ///
              option(order)    default(1)    

    
    TEXT  tncost     400    +35    140      .,                 ///  
             label("Normalized by the cost:")                                   ///      
          
  
   COMBOBOX  cb_cnor      550    @     190      .,                 ///
            dropdownlist                                          ///
            default(no) contents(cb_cnor)  values(cb_cnor_val) option(cnor)  
			
	TEXT  tnline     400    +35    140      .,                 ///  
             label("FGT index:")                                   ///      
          
  
   COMBOBOX  cb_pline      550    @     190      .,                 ///
            dropdownlist                                          ///
            default(yes) contents(cb_pline)  values(cb_pline_val) option(fnor) 



   RADIO    rad_bu3      400    +45     140      .,/*
 */ first label("Poverty line (z)")  onclickon(script rb_3)
 

           
    EDIT  ed_pline      550    @     190      .,                  ///
                  option(pline)   default(10000)


   TEXT    tx_min   550    +25    80      .,                    ///
           label("Minimum:   ") 		                ///
    		
   TEXT    tx_max   660    @       80      .,                 ///
           label("Maximum:   ") 
           

      RADIO    rad_bu4      400    +15     140      .,/*
 */ last label("Range of pov. line")    onclickon(script rb_4)                 
   
   EDIT    ed_min   550    @     80      .,                 ///
           default(0) option(min)	  	             ///
       		
   EDIT    ed_max   660    @      80      .,                 ///
           default(10000) option(max) 	
   
   TEXT txt_rm1     400    +35    280      .,                 ///  
                  label("*: The order of dominance s = alpha+1 ")  
END






LIST cb_cnor
BEGIN
  Not normalized
  Normalized
END

LIST cb_cnor_val
BEGIN
  no
  yes
END


LIST cb_pline
BEGIN
  Normalized by the poverty line
  Not normalized by the poverty line
END

LIST cb_pline_val
BEGIN
  yes
  no
END





SCRIPT rb_3
BEGIN
main.ed_pline.enable
main.ed_min.disable
main.ed_max.disable
END

SCRIPT rb_4
BEGIN
main.ed_pline.disable
main.ed_min.enable
main.ed_max.enable
END


DIALOG resop,  tabtitle("Results")

BEGIN
					
SPINNER  sp_dec    10       25      50	  .,		        /*
   		*/ label("Decimals")				/*
   		*/ min(0) default(9) max(12)				/*
  		*/ option(dec)

TEXT     sp_txt  70      25      100	  .,		                /*
   		*/ label("Number of decimals")	
   		


END


DIALOG res,  tabtitle(" Graphical Results")
  BEGIN
    

     GROUPBOX gb0 10     10    360  100,                      ///
             label("Curves ")
    
    TEXT  txt0     20    +25    120      .,                 ///  
               label("Draw")  

     COMBOBOX  cb_gt      140    @     140      .,                  ///
             dropdownlist                                          ///
             contents(cb_gt)  values(cb_gt_val)      ///
             default(no)   onselchangelist(cond_change)	 option(dci) 

    TEXT     sp_txt  20      +25      120      .,                            /*
                */ label("Confidence level in (%) : ")  
                
    SPINNER  sp_level    140       @      140         .,                    /*
                */ label("Confidence level")                            /*
                */ min(10) default(95) max(99)                          /*
                */ option(level)      

    TEXT     ci_txt  20      +25      120	  .,		                /*
   		*/ label("Confidence interval   : ")	
   		
COMBOBOX cb_ci       140    @   140      .,                 ///
            contents(cb_ci) values(cb_ci_val)              ///
            dropdownlist default(ts)   option(conf)  onselchangelist(cd_change)		

    GROUPBOX gb1 10     110    360  80,                      ///
             label("Coordinates: ")
             
    CHECKBOX   chk_op1        20    +25    60    .,                   ///
             label("List:")      
             
    TEXT  txt2     20    +25    40      .,                 ///  
               label("Save:")                                 
    
    FILE  fnamec      80    @     280      .,                 ///
    label ("Browse...")    save option(sres)    
    
    
    
    GROUPBOX gb2     10     200  360  120,                      ///
             label("Graph: ")
             
    CHECKBOX   chk_op3     20    +25    60    .,                   ///
             label("Display:") default(1)
             
             
    TEXT  txt4     20    +25    40      .,                 ///  
               label("Save:")                                  ///      
         
    
    FILE  fnamegs      80    @     280      .,                 ///
    label ("Browse...")    save option(sgra)                   ///
    filter("Stata Gragh (*.gph)|*.gph|All Files (*.*)|*.*")
    
    TEXT  chk_op5     20    +25    40      .,                 ///  
                   label("Export:")                                  ///      
            
        
        FILE  fnamege      80    @     280      .,                 ///
        label ("Browse...")    save option(egra)                   ///
        filter("MetaFile (*.wmf)|*.wmf|EPS (*.eps)|*.eps")
    
    
END

LIST yes_no
BEGIN
  yes
  no
END



SCRIPT PREINIT
BEGIN
        create BOOLEAN has_cond1
        create BOOLEAN has_cond2        
END

LIST cond_change
BEGIN
        script cond1
        script cond2
END


SCRIPT cond1
BEGIN
        has_cond1.settrue
        has_cond2.setfalse
        program check_conds
END

SCRIPT cond2
BEGIN
        has_cond1.setfalse
        has_cond2.settrue
        program check_conds
END




PROGRAM check_conds
BEGIN

if (has_cond1){
call res.sp_txt.hide
call res.sp_level.hide
call res.ci_txt.hide
call res.cb_ci.hide

}

if (has_cond2){
call res.sp_txt.show
call res.sp_level.show
call res.ci_txt.show
call res.cb_ci.show
}
END






LIST cb_gt
BEGIN
  Curves
  Confidence intervals
END

LIST cb_gt_val
BEGIN
  no
  yes
END


LIST cb_ci
BEGIN
  Two-sided
  Lower-bounded
  Upper-bounded
END


LIST cb_ci_val
BEGIN
  ts
  lb
  ub
END


INCLUDE gr_twoway

HELP hlp1,   view("help cdomc")
RESET res1
PROGRAM command
BEGIN
	put "cdomc "
	require  main.vl_clist
	varlist [main.vl_clist]
	beginoptions
		       
            optionarg main.vn_hhg
			optionarg main.vn_hhs
			require  main.vn_inc
			optionarg main.vn_inc
		
	        optionarg main.ed_prc
			optionarg main.ed_ord
			optionarg main.ed_pline
			optionarg main.ed_min
			optionarg main.ed_max

		         
			if !main.cb_cnor.isdefault()    {
                                                         optionarg main.cb_cnor
                                                        } 
														
			if !main.cb_pline.isdefault()    {
                                                         optionarg main.cb_pline
                                                        } 

                        if !res.cb_gt.isdefault()    {
                                                          optionarg res.cb_gt
                                                        }   

          

			
			optionarg res.fnamec
			optionarg res.fnamegs
			optionarg res.fnamege
		
                       
                       
	        optionarg res.sp_level
			if !resop.sp_dec.isdefault() {
			optionarg resop.sp_dec
			}

			if !res.cb_ci.isdefault()    {
					                 optionarg res.cb_ci
				                        } 
                                                        
			if res.chk_op1 {
						
						put "lres("
						put res.chk_op1
						put ")"
		                       }
		                       
		        if !res.chk_op3 {
						
						put "dgra("
						put res.chk_op3
						put ")"
		                       }               
			put " " /program gr_twoway_output
		        
			
	endoptions
	
	
	
END
