/*************************************************************************/
/* DASP  : Distributive Analysis Stata Package  (version 3.0)          */
/*************************************************************************/
/* Conceived and programmed by Dr. Araar Abdelkrim  (2021)               */
/* Universite Laval, Quebec, Canada                                    */
/* email : aabd@ecn.ulaval.ca                                            */
/* Phone : 1 418 656 7507                                                */
/*************************************************************************/

VERSION 15
SYNCHRONOUS_ONLY


POSITION . . 900 460

  DEFINE col10  10
  DEFINE line10  80
  DEFINE col11  20
  DEFINE col20  450
  DEFINE vposds 380
  

DIALOG main, label("DASP 3.0 | Difference Between Poverty Indices --> dipov command") tabtitle("Main")


BEGIN


     GROUPBOX chk_per  10    10  880 50,                         ///
           label("Poverty index and options: ")         ///
  
    
	
	TEXT txt_ind     +10    +20    80      .,                 ///  
                  label("Poverty index:   ")    
				  
    COMBOBOX  cb_index      100    @     160      .,                  ///
             dropdownlist                                          ///
             contents(cb_index)  values(cb_index_val) option(index)     ///
             default(fgt)   onselchangelist(co_index)			  
       
   
   TEXT txt_al     300    @    90      .,                 ///  
                  label("Parameter alpha:   ")  
   
   EDIT  ed_al     390   @     60      .,                 ///
              option(alpha)    default(0)    
           
             
           
   TEXT       txt_op2     480    @     60      .,                 ///  
             label("Type:   ")                             ///      
          
    COMBOBOX  cb_nor      530    @     120      .,                  ///
            dropdownlist                                          ///
            contents(cb_nor)  values(cb_nor_val) option(type)     ///
            default(nor)       
       
 
INCLUDE basic_pov


  
  GROUPBOX chk_pl1  10    +40  430 90,                         ///
           label("Poverty line: ")         ///
           
           
  RADIO    rb_a1      30     +25    110      .,                  ///
                 onclickon(program main_rb)  onclickoff(program main_rb) first          ///
                 label("Absolute:")
  
  VARNAME    vn_pl1   110    @     310      .,                 ///
            option(pline1)  
  
  COMBOBOX   en_pl1 	110    @     320 	.,	///
  dropdown contents(levels)  option(pline1)  		   
           
  RADIO    rb_r1     30         +30        90         .,                        ///
                 onclickon(program main_rb) last                ///
                 label("Relative:")        
   
  SPINNER prop1    110  @   60 ., ///
          min(1) max(100) default(50) label(" % of the ")  option(prop1) 
          
  TEXT    ofthe1    180  @   40 ., ///
           label(" % of the ")                   
   
   
   COMBOBOX  cb_pl1      230    @     70      .,                  ///
             dropdownlist                                          ///
             contents(cb_pl)  values(cb_pl_val) option(opl1)     ///
             default(me)   onselchangelist(co_change1)
             
             
   TEXT    ofpr1    310  @   70 ., ///
           label("at percentile")  
           
   EDIT perc1      380  @   40 ., ///
           default(0.40) label("pr")   option(perc1)   
           
   
   
   
   GROUPBOX chk_pl2  460    220  430 90,                         ///
              label("Poverty line: ")         ///
              
              
     RADIO    rb_a2      480     +25    110      .,                      ///
                 onclickon(program main_rb)  onclickoff(program main_rb) first          ///
                 label("Absolute:")
     
     VARNAME    vn_pl2      560    @     310      .,                 ///
               option(pline2) 
			   
      COMBOBOX     en_pl2      560   @     310      .,                 ///
            option(pline2)      dropdown contents(levels2) 		   
              
     RADIO    rb_r2     480         +30        80         .,                    ///
                 onclickon(program main_rb) last                ///
                 label("Relative:")        
      
     SPINNER prop2    560  @   60 ., ///
             min(1) max(100) default(50) label("% of the ")  option(prop2) 
             
     TEXT    ofthe2    630  @   50 ., ///
              label(" % of the ")                
      
      
      COMBOBOX  cb_pl2      680    @     70      .,                  ///
                dropdownlist                                          ///
                contents(cb_pl)  values(cb_pl_val) option(opl2)     ///
                default(me)   onselchangelist(co_change2)
                
                
      TEXT    ofpr2    760  @   70 ., ///
              label("at percentile")  
              
      EDIT perc2      830  @   40 ., ///
           default(0.40) label("pr")   option(perc2) 
   
INCLUDE dbsalo

 GROUPBOX chk_perg  230    320  360 60,                         ///
           label("Common population group(s): ")         ///
  
  
     TEXT     tx_varg      +10    +25    110      .,                 ///
           label("Group  variable(s):   ") 
 

     VARLIST   vn_gr     340     @     240      .,                 ///
      option(hgroup)
	  
	 EDIT      ed_gr     340     @     240      .,                 ///
      option(hgroup) default("")
           
 
END








LIST cb_nor
BEGIN
  Normalised
  Not normalised
END

LIST cb_nor_val
BEGIN
  nor
  not
END


LIST cb_pl
BEGIN
  Mean
  Median
  Quantile
END

LIST cb_pl_val
BEGIN
  mean
  median
  quantile
END

LIST cb_index
BEGIN
  FGT
  Watts
  Sen, Shorrocks & Thon
  
END

LIST cb_index_val
BEGIN
  fgt
  watts
  sst
END



LIST co_index
BEGIN
        script index1
        script index2
        script index3
        
END



SCRIPT index1
BEGIN
        has_index1.settrue
        has_index2.setfalse
        has_index3.setfalse
        program check_index
END

SCRIPT index2
BEGIN
        has_index1.setfalse
        has_index2.settrue
        has_index3.setfalse
        program check_index
END

SCRIPT index3
BEGIN
        has_index1.setfalse
        has_index2.setfalse
        has_index3.settrue
        program check_index
END



LIST co_change1
BEGIN
        script cond11
        script cond12
        script cond13
        
END


SCRIPT cond11
BEGIN
        has_cond11.settrue
        has_cond12.setfalse
        has_cond13.setfalse
        program check_co1
END

SCRIPT cond12
BEGIN
        has_cond11.setfalse
        has_cond12.settrue
        has_cond13.setfalse
        program check_co1
END

SCRIPT cond13
BEGIN
        has_cond11.setfalse
        has_cond12.setfalse
        has_cond13.settrue
        program check_co1
END


PROGRAM check_co1
BEGIN

if (has_cond11|has_cond12){
call main.ofpr1.hide
call main.perc1.hide

}

if has_cond13{
call main.ofpr1.show
call main.perc1.show

}

END


PROGRAM check_index
BEGIN

if (has_index1){
call main.cb_nor.show
call main.ed_al.show
call main.txt_al.show
call main.txt_op2.show
call main.rb_r1.show
call main.prop1.show
call main.cb_pl1.show
call main.ofthe1.show  

call main.rb_r2.show
call main.prop2.show
call main.cb_pl2.show
call main.ofthe2.show
   
if (has_cond11|has_cond12){
call main.ofpr1.hide
call main.perc1.hide
}

if (has_cond21|has_cond22){
call main.ofpr2.hide
call main.perc2.hide
}

if has_cond13{
call main.ofpr1.show
call main.perc1.show
} 

if has_cond23{
call main.ofpr2.show
call main.perc2.show
} 
}

if !has_index1{
call main.rb_a1.seton
call main.rb_a2.seton
call main.cb_nor.hide
call main.ed_al.hide
call main.txt_al.hide
call main.txt_op2.hide

call main.rb_r1.hide           
call main.prop1.hide
call main.cb_pl1.hide
call main.ofthe1.hide     
call main.ofpr1.hide    
call main.perc1.hide   

call main.rb_r2.hide           
call main.prop2.hide
call main.cb_pl2.hide
call main.ofthe2.hide     
call main.ofpr2.hide    
call main.perc2.hide   

}

END

LIST co_change2
BEGIN
        script cond21
        script cond22
        script cond23
        
END


SCRIPT cond21
BEGIN
        has_cond21.settrue
        has_cond22.setfalse
        has_cond23.setfalse
        program check_co2
END

SCRIPT cond22
BEGIN
        has_cond21.setfalse
        has_cond22.settrue
        has_cond23.setfalse
        program check_co2
END

SCRIPT cond23
BEGIN
        has_cond21.setfalse
        has_cond22.setfalse
        has_cond23.settrue
        program check_co2
END


PROGRAM check_co2
BEGIN

if (has_cond21|has_cond22){
call main.ofpr2.hide
call main.perc2.hide

}

if has_cond23{
call main.ofpr2.show
call main.perc2.show
}

END



PROGRAM check_conds
BEGIN
        if has_cond1 {
                call main.tx_d1c1.show
                call main.vn_d1c1.show
                call main.cb_d1c1.show
                call main.ed_d1c1.show
        }
        if !has_cond2 {
                call main.tx_d1c2.hide
                call main.vn_d1c2.hide
                call main.cb_d1c2.hide
                call main.ed_d1c2.hide
                call main.cb_d1aoc2.hide
        }
        if has_cond2 {
                call main.tx_d1c2.show
                call main.vn_d1c2.show
                call main.cb_d1c2.show
                call main.ed_d1c2.show
                call main.cb_d1aoc2.show
        }
        
        
END

PROGRAM check_conds2
BEGIN
        if has_cond3 {
                call main.tx_d2c1.show
                call main.vn_d2c1.show
                call main.cb_d2c1.show
                call main.ed_d2c1.show
        }
        if !has_cond4 {
                call main.tx_d2c2.hide
                call main.vn_d2c2.hide
                call main.cb_d2c2.hide
                call main.ed_d2c2.hide
                call main.cb_d2aoc2.hide
        }
        if has_cond4 {
                call main.tx_d2c2.show
                call main.vn_d2c2.show
                call main.cb_d2c2.show
                call main.ed_d2c2.show
                call main.cb_d2aoc2.show
        }
        
        
END



PROGRAM main_rb
BEGIN
if main.rb_a1  {
call main.vn_pl1.enable
call main.prop1.disable
call main.ofthe1.disable
call main.cb_pl1.disable
call main.ofpr1.disable
call main.perc1.disable
}

if !main.rb_a1  {
call main.vn_pl1.disable
call main.prop1.enable
call main.ofthe1.enable
call main.cb_pl1.enable
call main.ofpr1.enable
call main.perc1.enable
}

if main.rb_a2  {
call main.vn_pl2.enable

call main.prop2.disable
call main.ofthe2.disable
call main.cb_pl2.disable
call main.ofpr2.disable
call main.perc2.disable
}

if !main.rb_a2  {
call main.vn_pl2.disable
call main.prop2.enable
call main.ofthe2.enable
call main.cb_pl2.enable
call main.ofpr2.enable
call main.perc2.enable
}

END



LIST dt_src
BEGIN
  Data in memory
  Data in file
END

LIST dt_src_val
BEGIN
  1
  2
END


PROGRAM data_change1
BEGIN
        
if   main.fi_d1.isdefault()  {
                               call main.file_d1.hide
							   
                               call main.vn_y_d1.show
                               call main.vn_hhs_d1.show
                               call main.vn_pl1.show
							   
                               call main.en_y_d1.hide
                               call main.en_hhs_d1.hide
							   call main.en_pl1.hide
                                call main.vn_gr.show
								call main.ed_gr.hide
                               
                              }
							  
if  !main.fi_d1.isdefault()  {
                              call main.file_d1.show
							  
                               call main.vn_y_d1.hide
                               call main.vn_hhs_d1.hide  
							   call main.vn_pl1.hide
														   
                               call main.en_y_d1.show
                               call main.en_hhs_d1.show
							   call main.en_pl1.show
							   call main.vn_gr.hide
								call main.ed_gr.show

                              }
							  
END

PROGRAM data_change2
BEGIN
        

if   main.fi_d2.isdefault()  {
                               call main.file_d2.hide
							   
                               call main.vn_y_d2.show
                               call main.vn_hhs_d2.show
							   call main.vn_pl2.show
							   
                               call main.en_y_d2.hide
                               call main.en_hhs_d2.hide
							   call main.en_pl2.hide
                               
                               
                              }
if  !main.fi_d2.isdefault()  {
                              call main.file_d2.show
							  
                              call main.vn_hhs_d2.hide
                              call main.vn_y_d2.hide
							  call main.vn_pl2.hide
                              
                              call main.en_y_d2.show
                              call main.en_hhs_d2.show
							  call main.en_pl2.show
                              }         
END



PROGRAM cd1_on
BEGIN
        

                call main.ed_d1c1.enable


END

PROGRAM cd1_off
BEGIN
        
                call main.ed_d1c1.disable

                
END


PROGRAM cd2_on
BEGIN
        

                call main.ed_d2c1.enable         

END

PROGRAM cd2_off
BEGIN
        
 call main.ed_d2c1.disable
END



LIST variables
BEGIN
	// intentionally empty
	// this list will be populated by d1_work.ado
END

LIST levels
BEGIN
	// intentionally empty
	// this list will be populated by d1_work.ado
END

LIST levels2
BEGIN
	// intentionally empty
	// this list will be populated by d1_work.ado
END



PROGRAM getLevels
BEGIN
	if main.file_d1 & isLoading1 {
		put "GetLevels_DB " main.file_d1 " , mia(en_y_d1  en_hhs_d1 en_pl1) ndb(dipov)"
		stata hidden
	}
END

PROGRAM getLevels2
BEGIN
	if main.file_d2 & isLoading2 {
		put "GetLevels_DB " main.file_d2 " , mia(en_y_d2  en_hhs_d2 en_pl2) ndb(dipov)"
		stata hidden
	}
END


SCRIPT PREINIT
BEGIN
        create BOOLEAN has_cond11
        create BOOLEAN has_cond12
        create BOOLEAN has_cond13
        create BOOLEAN has_cond21
        create BOOLEAN has_cond22
        create BOOLEAN has_cond23
        create BOOLEAN has_cond1
        create BOOLEAN has_cond2
        create BOOLEAN has_cond3
        create BOOLEAN has_cond4 
		
	    create BOOLEAN has_index1
        create BOOLEAN has_index2
        create BOOLEAN has_index3
		
	    create BOOLEAN isLoading1
	     isLoading1.settrue
	    create BOOLEAN isLoading2
	     isLoading2.settrue
	    program initialize
END



SCRIPT POSTINIT
BEGIN
	.isLoading1.settrue
	.isLoading2.settrue
	program getLevels
	program getLevels2
END

PROGRAM initialize
BEGIN
	put "Init_DB , ndb(dipov)"
	stata hidden
END


PROGRAM POSTINIT_PROGRAM
BEGIN
        put "adasp2"
        stata hidden
END

INCLUDE confop




DIALOG resop,  tabtitle("Results")

BEGIN

TEXT     sp_txt1  10          25      260      .,                            /*
                */ label("  - Number of decimals of estimated indices:")                          
SPINNER  sp_dec1    270      @      50    .,                    /*
                */ label("Decimals")                            /*
                */ min(0) default(4) max(12)                            /*
                */ option(dec1)
				
TEXT     sp_txt2  10          +25      260      .,                            /*
                */ label("  - Number of decimals of estimated STE:")                          
SPINNER  sp_dec2    270      @      50    .,                    /*
                */ label("Decimals")                            /*
                */ min(0) default(4) max(12)                            /*
                */ option(dec2)				


                

   CHECKBOX ck_xls  10    +60  580 160,          ///
                 label(`"Save results in Excel format"')               ///
                 groupbox                                               ///
                 option("txls")                                 ///
                 onclickoff(program resop_xls)                      ///
                 onclickon(program resop_xls)                    ///
                 default(0)
  


       TEXT  tx_nxfile     20    +25    80      .,                 ///  
                   label("File :")                                  ///      
            
        
        FILE  fnamex      90    @     360      .,                 ///
        label ("Browse...")    save option("xfil")                   ///
        filter("MetaFile (*.xlsx)|*.xlsx|*.* (*.*)|*.*")  

        


       COMBOBOX cb_modrep        460    @   100   .,                              ///
            dropdownlist contents(cb_modrep) values(cb_modrep_val)               ///
             default(replace)     option(modrep)        

         
         
         
            TEXT     tx_she  20   +35      80     .,                    /*
                */ label("Sheet:")                      /*
                */
       
           
           EDIT     ed_she  90    @       470   .,                      /*
                */ label("sheet")                               /*
                */ option("xshe") default("Table 01")                   /*
                */   

      

       TEXT     tx_tit  20   +35      80     .,                 /*
                */ label("Title:")                      /*
                */
       EDIT     ed_tit  90    @       470   .,                  /*
                */ label("Bandwidth of kernel")                         /*
                */ option("xtit") default("Table 01: Poverty indices")                                    /*
                */   

END


LIST cb_modrep
BEGIN
  Replace
  Modify
END


LIST cb_modrep_val
BEGIN
  replace
  modify
END




PROGRAM resop_xls
BEGIN
if resop.ck_xls  {
call resop.tx_nxfile.enable
call resop.fnamex.enable
call resop.tx_she.enable
call resop.ed_she.enable

call resop.cb_modrep.enable
call resop.tx_tit.enable
call resop.ed_tit.enable
}

if !resop.ck_xls {
call resop.tx_nxfile.disable
call resop.fnamex.disable
call resop.tx_she.disable
call resop.ed_she.disable

call resop.cb_modrep.disable
call resop.tx_tit.disable
call resop.ed_tit.disable
}
END





HELP hlp1,   view("help dipov")
RESET res1
OK ok1,      label("OK")
CANCEL can1, label("Cancel")
SUBMIT sub1, label("Submit")
COPY copy1

PROGRAM command
BEGIN

        put "dipov "

INCLUDE comon1                      
                         
                        if main.rb_a1  {
                                       optionarg main.vn_pl1
									   optionarg main.en_pl1
                                       }
                        
                        if !main.rb_a1 {
                                       optionarg main.cb_pl1 
                                       optionarg main.prop1
                                       optionarg main.perc1
                                       
                                      } 
                                      
                        if main.rb_a2  {
                                       optionarg main.vn_pl2
									   optionarg main.en_pl2
                                       }
                        
                        if !main.rb_a2 {
                                       optionarg main.cb_pl2 
                                       optionarg main.prop2
                                       optionarg main.perc2
                                      } 
                                      

                          if !main.vn_gr.isdefault() {
						 	optionarg main.vn_gr
						 }
						 
						if !main.ed_gr.isdefault() {
						 	optionarg main.ed_gr
						 }
							
										
						optionarg main.ed_al
						
						
										
						if !main.cb_nor.isdefault() {
                                                        optionarg main.cb_nor
                                                     }
													 
						if !confop.sp_level.isdefault() {
                                                         optionarg confop.sp_level
                                                         }
                                                 
                        if !confop.cb_ci.isdefault()    {
                                                         optionarg confop.cb_ci
                                                        }  
					 optionarg confop.en_test	
					 
					  optionarg resop.fnamex
                        optionarg resop.ed_she

                        if !resop.cb_modrep.isdefault(){
                        optionarg resop.cb_modrep
                        }

                        if !resop.ed_tit.isdefault(){
                        optionarg resop.ed_tit
                        }
                        
            

                        if !resop.sp_dec1.isdefault() {
                        optionarg resop.sp_dec1
                        }
						
						  if !resop.sp_dec2.isdefault() {
                        optionarg resop.sp_dec2
                        }

                       
						optionarg main.dbsamex
						optionarg main.cb_index
                        
                                                        
                                
                                                

endoptions      
        
END
