/*************************************************************************/
/* DASP  : Distributive Analysis Stata Package  (version 2.3)            */
/*************************************************************************/
/* Conceived and programmed by Dr. Araar Abdelkrim  (2006-2012)          */
/* Universite Laval, Quebec, Canada                                      */
/* email : aabd@ecn.ulaval.ca                                            */
/* Phone : 1 418 656 7507                                                */
/*************************************************************************/
/* module  : cprog.dlg                                                 */
/*************************************************************************/

VERSION 15.0

INCLUDE _std_xlarge
DEFINE  _dlght 430
DEFINE  _dlgwd 890
INCLUDE header

DIALOG main, label("DASP 3.0 |Progressivity curves --> cprog command")  tabtitle("Main")


BEGIN
  
 GROUPBOX intvar       10     10    430  220,                      ///
           label("Variables of interest: ")
           
          
           
  TEXT     tx_var1      20    +25    150      .,                 ///
           label("Component(s):   ")  
		   
  VARLIST  vl_com      150    @     280      .,                 
            
  
 TEXT     tx_var22     20    +25    150      .,                 ///
           label("Type of component(s):")            
 
 COMBOBOX  cb_type      150    @     280      .,                 ///
            dropdownlist                                          ///
            contents(cb_type)  values(cb_type_val) option(type)  	
  			
  TEXT     tx_var21      20    +25    150      .,                 ///
           label("Ranking variable:  ")  
		   
  VARNAME  vn_rank      150    @     280      .,                 ///
  option(rank)
 		
           
  TEXT     tx_var2      20    160    150      .,                 ///
           label("Size  variable:   ")  
  VARNAME  vn_hhs      150    @     280      .,                 ///
           option(hsize) 
		   		        
  TEXT     tx_var4      20    +25    150      .,                 ///
           label("Group  variable:   ") 
  VARNAME  vn_hhg      150    @     280      .,                 ///
           option(hgroup)            


		 
  GROUPBOX chk_per  450    10  430 220,                         ///
           label("Approach(s)")
           
  TEXT txt_varap     +10    +25    130      .,                 ///  
             label("Approach:   ")                             ///      
          
  COMBOBOX  cb_appr     +130    @     260      .,                  ///
            dropdownlist                                          ///
            contents(cb_appr)  values(cb_appr_val) option(appr)   default(tr)   
            
           

           
  CHECKBOX  chk_per1  460    140  420 80,                         ///
  groupbox label("Range of percentiles (p): ")         ///
  onclickon(script ran_inon)                                           ///
  onclickoff(script ran_inoff) 

  
   
   TEXT    tx_min   +30    160    100      .,                    ///
           label("Minimum:   ") 		                ///
    		
   TEXT    tx_max   +200    @   100      .,                 ///
           label("Maximum:   ") 
           
   EDIT    ed_min   490    180    100      .,                 ///
           default(0.0) option(min)	  	             ///
       		
   EDIT    ed_max   +200   @      100      .,                 ///
           default(1.0) option(max) 	
   
   
END




LIST cb_type
BEGIN
  Tax
  Transfer
END

LIST cb_type_val
BEGIN
t
b
END

LIST cb_appr
BEGIN
  Tax-Redistribution    (TR) approach
  Income-Redistribution (IR) approach
END

LIST cb_appr_val
BEGIN
 tr
 ir
END


SCRIPT ran_inon
BEGIN
  main.ed_min.enable 
  main.ed_max.enable
END

SCRIPT ran_inoff
BEGIN
  main.ed_min.disable 
  main.ed_max.disable
END



DIALOG res,  tabtitle("Results")
  BEGIN
    GROUPBOX gb1 10     10    360  80,                      ///
             label("Coordinates: ")
             
    CHECKBOX   chk_op1        20    +25    60    .,                   ///
             label("List:")      
             
    TEXT  txt2     20    +25    40      .,                 ///  
               label("Save:")                                 
    
    FILE  fnamec      80    @     280      .,                 ///
    label ("Browse...")    save option(sres)    
    
    
    
    GROUPBOX gb2     10     140    360  120,                      ///
             label("Graph: ")
             
    CHECKBOX   chk_op3     20    +25    60    .,                   ///
             label("Display:") default(1)
             
             
    TEXT  txt4     20    +25    40      .,                 ///  
               label("Save:")                                  ///      
         
    
    FILE  fnamegs      80    @     280      .,                 ///
    label ("Browse...")    save option(sgra)                   ///
    filter("Stata Gragh (*.gph)|*.gph|All Files (*.*)|*.*")
    
    TEXT  chk_op5     20    +25    40      .,                 ///  
                   label("Export:")                                  ///      
            
        
        FILE  fnamege      80    @     280      .,                 ///
        label ("Browse...")    save option(egra)                   ///
        filter("MetaFile (*.wmf)|*.wmf|EPS (*.eps)|*.eps")
    
    
END

LIST yes_no
BEGIN
  yes
  no
END




INCLUDE gr_line_options
INCLUDE gr_yaxis
INCLUDE gr_xaxis
INCLUDE gr_titles
INCLUDE gr_legend
INCLUDE gr_overall



HELP hlp1,   view("help cprog")
RESET res1

PROGRAM command
BEGIN
	put "cprog "
	require  main.vl_com
	varlist [main.vl_com]
	beginoptions
			optionarg main.vn_rank
			optionarg main.vn_hhs
			optionarg main.vn_hhg
			optionarg main.cb_type
			optionarg main.cb_appr
		
			if !main.ed_min.isdefault() {
			optionarg main.ed_min
			}
			if !main.ed_max.isdefault() {
			optionarg main.ed_max
			}
			optionarg res.fnamec
			
			optionarg res.fnamegs
			optionarg res.fnamege
			if res.chk_op1 {
						
						put "lres("
						put res.chk_op1
						put ")"
		                       }
		                       
		        if !res.chk_op3 {
						
						put "dgra("
						put res.chk_op3
						put ")"
		                       }    
							   
							   
	       		    put " " /program gr_line_options_output
            put " " /program gr_yaxis_output
put " " /program gr_xaxis_output
put " " /program gr_titles_output
put " " /program gr_legend_output
put " " /program gr_overall_output

	endoptions
	
	
	
END
