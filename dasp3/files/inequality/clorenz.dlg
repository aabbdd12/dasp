/*************************************************************************/
/* DASP  : Distributive Analysis Stata Package  (version 2.3)            */
/*************************************************************************/
/* Conceived and programmed by Dr. Araar Abdelkrim  (2006-2012)          */
/* Universite Laval, Quebec, Canada                                      */
/* email : aabd@ecn.ulaval.ca                                            */
/* Phone : 1 418 656 7507                                                */
/*************************************************************************/ 
/* cfgt.dlg                                                              */
/*************************************************************************/ 

VERSION 15.0

INCLUDE _std_xlarge
DEFINE  _dlght 430
DEFINE  _dlgwd 890
INCLUDE header


DIALOG main, label("DASP 3.0 |Lorenz & Concentration Curves --> clorenz command")  tabtitle("Main")


BEGIN
  
 GROUPBOX intvar       10     10    430  260,                      ///
           label("Variables of interest: ")
           
  
  TEXT     tx_var111     20    +25    150      .,                 ///
           label("Welfare variable(s):   ")  
  
  VARLIST  vl_var 150     @   280   .,                   ///
           label("Variables")
		   
		   
   CHECKBOX chk_var0     20    +25    150      .,                 ///  
             label("Ranking variable:   ")                       ///      
  onclickon(main.vn_rank.enable)                                 ///
  onclickoff(main.vn_rank.disable)           
  
  VARNAME  vn_rank      150    @     280      .,                 ///
           option(rank)   		   
           
  TEXT     tx_var2      20    +25    150      .,                 ///
           label("Size  variable:   ")  
  VARNAME  vn_hhs      150    @     280      .,                 ///
           option(hsize)      
 
  TEXT     tx_var4      20    +25    150      .,                 ///
           label("Group  variable:   ") 
  VARNAME  vn_hhg      150    @     280      .,                 ///
           option(hgroup)            


		   
  
  GROUPBOX percentile   450    10  430 260,                         ///
           label("Type of curve(s)")
  
 
    
    TEXT  txt0     460    +25    120      .,                 ///  
               label("Draw")  

    COMBOBOX  cb_gt      +140    @     240      .,                  ///
             dropdownlist                                          ///
             contents(cb_gt)  values(cb_gt_val)      ///
             default(no)   onselchangelist(cond_change)	 option(dci) 

    TEXT     sp_txt  460      +25      120      .,                            /*
                */ label("Confidence level in (%) : ")  
                
    SPINNER  sp_level    +140       @      240         .,                    /*
                */ label("Confidence level")                            /*
                */ min(10) default(95) max(99)                          /*
                */ option(level)      

TEXT     ci_txt  460      +25      120	  .,		                /*
   		*/ label("Confidence interval   : ")	
   		
COMBOBOX cb_ci       +140    @   240      .,                 ///
            contents(cb_ci) values(cb_ci_val)              ///
            dropdownlist default(ts)   option(conf)  onselchangelist(cd_change)		

			
	/*
	CHECKBOX chk_var1     400    +25    80      .,                 ///  
             label("Type:   ")                                   ///      
  onclickon(main.cb_type.enable)                                 ///
  onclickoff(main.cb_type.disable)           
  
  COMBOBOX  cb_type      500    @     240      .,                 ///
            dropdownlist                                          ///
            contents(cb_type)  values(cb_type_val) option(type)  
            
  CHECKBOX chk_var2     400    +25    80      .,                 ///  
             label("Difference:   ")                             ///      
  onclickon(main.cb_dif.enable)                                  ///
  onclickoff(main.cb_dif.disable)           
  COMBOBOX  cb_dif      500    @     240      .,                  ///
            dropdownlist                                          ///
            contents(cb_dif)  values(cb_dif_val) option(dif)     
            
           
  CHECKBOX chk_per  390    140  360 80,                         ///
           groupbox label("Range of percentiles (p): ")         ///
  onclickon(script ran_inon)                                           ///
  onclickoff(script ran_inoff) 
   
   TEXT    tx_min   410    160    80      .,                    ///
           label("Minimum:   ") 		                ///
    		
   TEXT    tx_max   560    @   80      .,                 ///
           label("Maximum:   ") 
           
   EDIT    ed_min   410    180    80      .,                 ///
           default(0.0) option(min)	  	             ///
       		
   EDIT    ed_max   560    @      80      .,                 ///
           default(1.0) option(max) 	
	
	*/
  
  
  CHECKBOX chk_var1     460    +25    140      .,                 ///  
             label("Type:   ")                                   ///      
  onclickon(main.cb_type.enable)                                 ///
  onclickoff(main.cb_type.disable)           
  
  COMBOBOX  cb_type      +140    @     240      .,                 ///
            dropdownlist                                          ///
            contents(cb_type)  values(cb_type_val) option(type)  
            
  CHECKBOX chk_var2     460    +25    140      .,                 ///  
             label("Difference:   ")                             ///     
  onclickon(main.cb_dif.enable)                                  ///
  onclickoff(main.cb_dif.disable)           
  
  COMBOBOX  cb_dif      +140   @     240      .,                  ///
            dropdownlist                                          ///
            contents(cb_dif)  values(cb_dif_val) option(dif)     
            
           
  GROUPBOX chk_per  460    +25  410 100,                         ///
           label("Parameters: ")         ///
    
           
   TEXT    tx_min   600    +25    80      .,                    ///
           label("Minimum:   ") 		                ///
    		
   TEXT    tx_max   750    @   80      .,                 ///
           label("Maximum:   ") 
           
   
   TEXT txt_pl     470     +20    150      .,                 ///  
                  label("Range of percentiles (p):   ")        
   
   EDIT    ed_min   600    @     90      .,                 ///
           default(0) option(min)	  	             ///
       		
   EDIT    ed_max   750    @      90      .,                 ///
           default(1) option(max) 	
   
END


LIST cb_type
BEGIN
  Lorenz/Concentration curve(s)
  Generalised Lorenz/Concentration curve(s)
  Absolute Lorenz/Concentration curve(s)
END

LIST cb_type_val
BEGIN
  nor
  gen
  abs
END

LIST cb_dif
BEGIN
  No
  With percentiles (p): p - curve(p)
  With the first curve
END

LIST cb_dif_val
BEGIN
 no
 ds
 c1
END

SCRIPT ran_inon
BEGIN
  main.ed_min.enable 
  main.ed_max.enable
END

SCRIPT ran_inoff
BEGIN
  main.ed_min.disable 
  main.ed_max.disable
END




DIALOG res,  tabtitle(" Graphical Results")
  BEGIN
    

 
    GROUPBOX gb1 10     10    360  80,                      ///
             label("Coordinates: ")
             
    CHECKBOX   chk_op1        20    +25    60    .,                   ///
             label("List:")      
             
    TEXT  txt2     20    +25    40      .,                 ///  
               label("Save:")                                 
    
    FILE  fnamec      80    @     280      .,                 ///
    label ("Browse...")    save option(sres)    
    
    
    
    GROUPBOX gb2     10     +40  360  120,                      ///
             label("Graph: ")
             
    CHECKBOX   chk_op3     20    +25    60    .,                   ///
             label("Display:") default(1)
             
             
    TEXT  txt4     20    +25    40      .,                 ///  
               label("Save:")                                  ///      
         
    
    FILE  fnamegs      80    @     280      .,                 ///
    label ("Browse...")    save option(sgra)                   ///
    filter("Stata Gragh (*.gph)|*.gph|All Files (*.*)|*.*")
    
    TEXT  chk_op5     20    +25    40      .,                 ///  
                   label("Export:")                                  ///      
            
        
        FILE  fnamege      80    @     280      .,                 ///
        label ("Browse...")    save option(egra)                   ///
        filter("MetaFile (*.wmf)|*.wmf|EPS (*.eps)|*.eps")
    
    
END






LIST cond_change
BEGIN
        script cond1
        script cond2
END


SCRIPT cond1
BEGIN
        has_cond1.settrue
        has_cond2.setfalse
        program check_conds
END

SCRIPT cond2
BEGIN
        has_cond1.setfalse
        has_cond2.settrue
        program check_conds
END




PROGRAM check_conds
BEGIN

if (has_cond1){
call main.sp_txt.hide
call main.sp_level.hide
call main.ci_txt.hide
call main.cb_ci.hide
call main.chk_var2.show
 call main.cb_dif.show

}

if (has_cond2){
call main.sp_txt.show
call main.sp_level.show
call main.ci_txt.show
call main.cb_ci.show
call main.chk_var2.hide 
 call main.cb_dif.hide
}
END






LIST cb_gt
BEGIN
  Lines of curves
  Confidence intervals of curves
END

LIST cb_gt_val
BEGIN
  no
  yes
END


LIST cb_ci
BEGIN
  Two-sided
  Lower-bounded
  Upper-bounded
END


LIST cb_ci_val
BEGIN
  ts
  lb
  ub
END





LIST yes_no
BEGIN
  yes
  no
END



INCLUDE gr_line_options
INCLUDE gr_yaxis
INCLUDE gr_xaxis
INCLUDE gr_titles
INCLUDE gr_legend
INCLUDE gr_overall

SCRIPT PREINIT
BEGIN
        create BOOLEAN has_cond1
        create BOOLEAN has_cond2  
        create BOOLEAN has_cond3
        create BOOLEAN has_cond4        
END

HELP hlp1,   view("help clorenz")
RESET res1

PROGRAM command
BEGIN
	put "clorenz "
	require  main.vl_var
	varlist [main.vl_var]
	beginoptions
		       
			
			optionarg main.vn_rank
			optionarg main.vn_hhs
			optionarg main.vn_hhg
			optionarg main.cb_type
			optionarg main.cb_dif
		
			optionarg main.ed_min
			optionarg main.ed_max
			
		    optionarg res.fnamec
			optionarg res.fnamegs
			optionarg res.fnamege
        
	        optionarg main.sp_level
		      if !main.cb_gt.isdefault()    {
                                                    optionarg main.cb_gt
                                                        }   

          
		       if !main.cb_ci.isdefault()    {
					                 optionarg main.cb_ci
				                        } 
                                                      
			if res.chk_op1 {
						
						put "lres("
						put res.chk_op1
						put ")"
		                       }
		                       
		        if !res.chk_op3 {
						
						put "dgra("
						put res.chk_op3
						put ")"
		                       } 
							   
							   
		       		    put " " /program gr_line_options_output
            put " " /program gr_yaxis_output
put " " /program gr_xaxis_output
put " " /program gr_titles_output
put " " /program gr_legend_output
put " " /program gr_overall_output
		        
			
	endoptions
	
	
	
END
