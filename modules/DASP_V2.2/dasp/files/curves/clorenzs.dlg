/*************************************************************************/
/* DASP  : Distributive Analysis Stata Package  (version 2.2)            */
/*************************************************************************/
/* Conceived and programmed by Dr. Araar Abdelkrim  (2006-2012)          */
/* Universite Laval, Quebec, Canada                                      */
/* email : aabd@ecn.ulaval.ca                                            */
/* Phone : 1 418 656 7507                                                */
/*************************************************************************/ 
/* clorenzs.dlg                                                          */
/*************************************************************************/ 

VERSION 9.2



INCLUDE graph_header
INCLUDE header




DIALOG main, label("DASP|Lorenz/Concentration curve with confidence interval")  tabtitle("Main")


BEGIN
  
  GROUPBOX intvar 10     10    360  80,                      ///
           label("Variable of interest: ")
           
  VARNAME  vl_var 20     +25   340   .,                   ///
           label("Variable")
           
           
  CHECKBOX chk_var0     20    +25    100      .,                 ///  
             label("Ranking variable:   ")                       ///      
  onclickon(main.vn_rank.enable)                                 ///
  onclickoff(main.vn_rank.disable)           
  
  VARNAME  vn_rank      140    @     220      .,                 ///
           option(rank)            
           
  
           
       
           
  TEXT     tx_var2      20    140    80      .,                 ///
           label("Size  variable:   ")  
  VARNAME  vn_hhs      110    @     250      .,                 ///
           option(hsize)   
           
  TEXT     tx_var4      20    +45    80      .,                 ///
           label("Group  variable:   ") 
  VARNAME  vn_hhg      110    @     250      .,                 ///
           option(hgroup)            

  TEXT     tx_var5      20    +25    80      .,                 ///
             label("Group  number:   ") 
    
    
  EDIT    en_hhgn      110    @     250      .,                 ///
           option(ngroup)    
        


  GROUPBOX percentile 390    10    360 80,                      ///
           label("Type of curve(s)")
           
  CHECKBOX chk_var1     400    +25    80      .,                 ///  
             label("Type:   ")                                   ///      
  onclickon(main.cb_type.enable)                                 ///
  onclickoff(main.cb_type.disable)           
  
  COMBOBOX  cb_type      500    @     240      .,                 ///
            dropdownlist                                          ///
            contents(cb_type)  values(cb_type_val) option(type)  
            
 
            
           
  CHECKBOX chk_per  390    140  360 80,                         ///
           groupbox label("Range of percentiles (p): ")         ///
  onclickon(script ran_inon)                                           ///
  onclickoff(script ran_inoff) 
   
   TEXT    tx_min   410    160    80      .,                    ///
           label("Minimum:   ") 		                ///
    		
   TEXT    tx_max   560    @   80      .,                 ///
           label("Maximum:   ") 
           
   EDIT    ed_min   410    180    80      .,                 ///
           default(0.0) option(min)	  	             ///
       		
   EDIT    ed_max   560    @      80      .,                 ///
           default(1.0) option(max) 	
   

   DEFINE _x 20
   DEFINE _y 280
	        
  INCLUDE _bu_svyset
END




LIST cb_type
BEGIN
  Normalised (by default)
  Generalised
  
END

LIST cb_type_val
BEGIN
  nor
  gen
  
END


SCRIPT ran_inon
BEGIN
  main.ed_min.enable 
  main.ed_max.enable
END

SCRIPT ran_inoff
BEGIN
  main.ed_min.disable 
  main.ed_max.disable
END




INCLUDE dasp_conf_opts

INCLUDE dasp_dif_line_opts

INCLUDE dasp_gr_res_opts


INCLUDE gr_twoway

HELP hlp1,   view("help clorenzs")
RESET res1
PROGRAM command
BEGIN
	put "clorenzs "
	require  main.vl_var
	varlist [main.vl_var]
	beginoptions
			optionarg main.vn_rank
			optionarg main.vn_hhs
			optionarg main.vn_hhg
			optionarg main.en_hhgn
			optionarg main.cb_type

		
			if !main.ed_min.isdefault() {
			optionarg main.ed_min
			}
			if !main.ed_max.isdefault() {
			optionarg main.ed_max
			}
			optionarg res.fnamec
			
			optionarg res.fnamegs
			optionarg res.fnamege
			if res.chk_op1 {
						
						put "lres("
						put res.chk_op1
						put ")"
		                       }
		                       
		        if !res.chk_op3 {
						
						put "dgra("
						put res.chk_op3
						put ")"
		                       }   
		                       
		        if !confop.sp_level.isdefault() {
					                 optionarg confop.sp_level
							 }
				                 
			if !confop.cb_ci.isdefault()    {
					                 optionarg confop.cb_ci
					                 
				                        }   
				                        
		    
				                        

			put " " /program gr_twoway_output
			put " " /program confop_opts
			put " " /program confop_opts2
			put " " /program line_opts_dilopts_output
			
                        
			
		        
			
	endoptions
	
	
	
END
